10.1 描述和使用字符，数字和日期函数
	
	11,ROUND:依据指定的小数精度进行舍入运算。
		ROUND(source number, decimal precision)
			select round(1601.916, 1) from dual;  // 1601.9
			select round(1601.916, 2) from dual;  // 1601.92
			select round(1601.916, -3) from dual;  // 2000
			select round(1601.916) from dual;  // 1602

	12,TRUNC:依据指定的小数精度进行截取运算。
		TRUNC(source number, decimal precision)
			select trunc(1601.916, 1) from dual;  // 1601.9
			select trunc(1601.916, 2) from dual;  // 1601.91
			select trunc(1601.916, -3) from dual;  // 1000
			select trunc(1601.916) from dual;  // 1601
			
	13,MOD:返回除法运算的余数。
		MOD(dividend, divisor)
			select mod(6,2) from dual;		// 0
			select mod(5,3) from dual;		// 2
			select mod(7,35) from dual;		// 7
			select mod(5.2,3) from dual;	// 2.2
			
	14,SYSDATE:返回数据库服务器当前的系统日期和时间。默认返回DD-MON-RR的格式。
			select sysdate from dual; 	//15-10-12

	15,MONTHS_BETWEEN:返回两个日期间的月数。
		MONTHS_BETWEEN(date1, date2)
			select months_between(sysdate,sysdate-30) from dual;	// 1
			select months_between('15-05-08','15-10-08') from dual;	// -5
			select months_between('15-05-08','15-02-08')*31 from dual;	// 93

	16,ADD_MONTHS:将指定月数添加到给定日期。
		ADD_MONTHS(start data, number of months)
			select add_months('15-10-12', 1) from dual;		// 15-11-12
			select add_months('15-10-12', 2.5) from dual;	// 15-12-12(小数部分忽略)
			select add_months('15-10-12', -12) from dual;	// 14-10-12

	17,NEXT_DAY:返回的日期是星期内指定的日子下一次出现时的日期。
		NEXT_DAY(start dsate, day of the week)
			day of the week:字符值或者整数值。（1表示星期日，2表示星期一，...）字符的话可以是：sun,sund,suda,sunday(至少3个字符）
			
			select next_day('15-10-12', 'tue') from dual;		// 15-10-13
			select next_day('15-10-12', 5) from dual;			// 15-10-15

	18,LAST_DAY:返回指定日期所属月的最后一天。
		LAST_DAY(start date)
			select last_day('15-10-12') from dual;	// 15-10-31

	19,日期ROUND:与11类似
		ROUND(source date, [date precision format])
			[date precision format]:没有指定，默认为日。包括：世纪(CC),年(YYYY),季度(Q),月(MM),星期(W),日(DD),时(HH),分(MI)。
			
			select round(sysdate) day,
				   round(sysdate,'w') week,
				   round(sysdate,'month') month,
				   round(sysdate,'year') year
			from dual;

			DAY                       WEEK                      MONTH                     YEAR                      
			------------------------- ------------------------- ------------------------- ------------------------- 
			15-10-12                  15-10-15                  15-10-01                  16-01-01                  


	20,日期TRUNC：与12类似
		TRUNC(source date, [date precision format])
			select trunc(sysdate) day,
				   trunc(sysdate,'w') week,
				   trunc(sysdate,'month') month,
				   trunc(sysdate,'year') year
			from dual;

			DAY                       WEEK                      MONTH                     YEAR                      
			------------------------- ------------------------- ------------------------- ------------------------- 
			15-10-12                  15-10-08                  15-10-01                  15-01-01  


	
		TO_NUMBER(char, [format mask], [nls_parameters]) = num1
		  TO_CHAR(num1, [format mask], [nls_parameters]) = char1
		
		TO_DATE(char1, [format mask], [nls_parameters]) = date1
		TO_CHAR(date1, [format mask], [nls_parameters]) = char1

	21,TO_CHAR
		TO_CHAR(num, [format], [nls_parameter])

		select to_char(00001) from dual;			// 1
		select to_char(00001,'0999999') from dual;	// 0000001


		TO_CHAR(date, [format], [nls_parameter])
		
		select to_char(sysdate) from dual;				// 15-10-12
		select to_char(sysdate,'Month')  from dual;		// 10月
		select to_char(sysdate,'fmMonth') from dual;	// 10月 'fm'会删除多余的空格


		TO_DATE(string, [format], [nls_parameter])
		
		select to_date('15-10-12') from dual;		// 15-10-12
		select to_date('10-12') from dual;			// 错误，无法转换
		select to_date('10-12','MM-DD') from dual;	// 15-10-12
		select to_date('15-10-12 10:10:10', 'YYYY-MM-DD HH24:MI:SS') from dual;	// 2015-10-12 10:10:10
		select to_date('15-10-12','fxYYYY-MM-DD') from dual;	// 错误  'fx'表示完全匹配。'15-10-12'改成'2015-10-12'就可以。


		TO_NUMBER(string, [format], [nls_parameter])

		select to_number('$1,000.55') from dual;				// 错误
		select to_number('$1,000.55', '$999,999.99') from dual;	// 1000.55



10.4 在SELECT语句中应用条件表达式
	条件函数
		1,NVL:评估列或表达式是不是空值。如果为空，返回备选的非空值，否则，返回原始值。
			NVL(original, ifnull)
			
			select nvl(null,1234) from dual;	// 1234
			select nvl(substr('abc', 4), 'No substring exists') from dual;	// No substring exists
		
		2,NVL2:评估列或表达式是不是空值。如果第一个参数不为空，返回第二个参数，否则，返回第三个参数。
			NVL2(original, innotnull, ifnull)
			
			select nvl2(1234,1,'a string') from dual;	// 错误，'a string'无效的数字
			select nvl2(null,1234,5678) from dual;		// 5678
			select nvl2(substr('abc',2), 'Not bc', 'No substring') from dual;	// Not bc

		3,NULLIF:测试两项的相等性。如果相等，返回空值，否则返回第一项。
			NULLIF(ifunequal, comparison_term)
			
			select nullif(1234,1234) from dual;					// 空
			select nullif('2015-10-12','15-10-12') from dual;	// 2015-10-12 
			
		4,COALESCE:从参数列表返回第一个非空值。如果全为空，则返回空值。
			COALESCE(expr1, expr2, ...)
			
			select coalesce(null,null,null, 'a string') from dual;	// a string
			select coalesce(null,null,null) from dual;				// 空
			select coalesce(substr('abc',4), 'not bc', 'no substring') from dual;	// not bc
	
		5,DECODE:通过测试前两项的相等性来实现if-then-else条件逻辑。如果相等，返回第三个参数。（ORACLE特有）
			DECODE(expr1, comp1, iftrue1, [comp2, iftrue2 ...])
			伪代码：	if      expr1 = comp1 then return iftrue1
					else if expr1 = comp2 then return iftrue2
						...
						...
					else if expr1 = compN then return iftrueN
					else return null | iffalse;

			select decode(1234,123,'123 is a match') from dual;	// 空
			select decode(1234,123,'123 is a match','no match') from dual;	// no match
			select decode('search', 'comp1', 'true1', 'comp2', 'true2', 'search', 'true3', substr('2search',2,6),'true4','false') from dual;	// true3
			 
		6,CASE:使用if-then-else条件逻辑。（ANSI SQL标准）
			CASE search_expr
				WHEN comparison_expr1 THEN iftrue1
				[WHEN comparison_expr2 THEN iftrue2
					...
					...
				 ELSE iffalse]
			END
			
			select 
				case substr(1234,1,3)
					when '1234' then '1234 is a match'
					when '1235' then '1235 is a match'
					when concat('1','23') then concat('1','23') || ' is a match'
					else 'no match'
				end			
			from dual;	// 123 is a match

			搜索的CASE写法：  case when ... end
				select last_name,hire_date,
					case
						when flag<1 then '10'
						when flag<2 then '20'
						else '30'
					end as "newFlag"
				from employees;




作成日：2015/10/12